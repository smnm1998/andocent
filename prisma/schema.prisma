// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 사용자 모델
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  nickname  String   @unique
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 관계
  chatHistories ChatHistory[]

  @@map("users")
}

// 사용자 역할
enum UserRole {
  ADMIN
  USER
}

// 카테고리 모델
model Category {
  id          String @id @default(cuid())
  name        String @unique
  description String?
  color       String @default("#3B82F6") // 카테고리별 색상
  icon        String? // 아이콘 이름 또는 URL

  // 관계
  places Place[]

  @@map("categories")
}

// 장소 모델 (명소, 유적지, 식당 등)
model Place {
  id          String  @id @default(cuid())
  name        String
  address     String
  phoneNumber String?
  description String?
  latitude    Float
  longitude   Float
  imageUrl    String? // 대표 사진 URL
  
  // 식당 전용 필드
  cuisine     String? // 음식 종류 (찜닭, 헛제삿밥 등)
  priceRange  String? // 가격대
  openHours   String? // 영업시간
  
  // 명소/유적지 전용 필드
  historicalPeriod String? // 역사적 시대
  significance     String? // 역사적 의미
  
  isActive    Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 관계
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  
  chatHistories ChatHistory[]
  images        PlaceImage[]

  @@map("places")
}

// 채팅 기록 모델
model ChatHistory {
  id        String   @id @default(cuid())
  question  String
  answer    String
  createdAt DateTime @default(now())

  // 관계
  userId  String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  placeId String?
  place   Place? @relation(fields: [placeId], references: [id], onDelete: SetNull)

  @@map("chat_histories")
}

// 추가 이미지 모델 (한 장소당 여러 이미지 가능)
model PlaceImage {
  id        String @id @default(cuid())
  url       String
  caption   String?
  order     Int    @default(0)
  createdAt DateTime @default(now())

  // 관계
  placeId String
  place   Place @relation(fields: [placeId], references: [id], onDelete: Cascade)

  @@map("place_images")
}

// 기본 데이터 시딩을 위한 모델
model PlaceCategory {
  id   String @id @default(cuid())
  name String @unique

  @@map("place_categories")
}